import { IonSlides } from '@ionic/angular';
import { OnInit, OnChanges, EventEmitter, SimpleChanges, TemplateRef, ElementRef } from '@angular/core';
import { ICalendarComponent, IDisplayEvent, IEvent, ITimeSelected, IRange, IWeekView, IWeekViewRow, CalendarMode, IDateFormatter, IWeekViewDateRow } from './calendar';
import { CalendarService } from './calendar.service';
export declare class WeekViewComponent implements ICalendarComponent, OnInit, OnChanges {
    private calendarService;
    private elm;
    slider: IonSlides;
    class: boolean;
    weekviewNormalEventTemplate: TemplateRef<IDisplayEvent>;
    formatWeekTitle: string;
    formatWeekViewDayHeader: string;
    formatHourColumn: string;
    startingDayWeek: number;
    hourParts: number;
    eventSource: IEvent[];
    roomSource: string[];
    markDisabled: (date: Date) => boolean;
    locale: string;
    dateFormatter: IDateFormatter;
    dir: string;
    scrollToHour: number;
    preserveScrollPosition: boolean;
    lockSwipeToPrev: boolean;
    lockSwipes: boolean;
    startHour: number;
    endHour: number;
    spaceBetween: number;
    sliderOptions: any;
    onRangeChanged: EventEmitter<IRange>;
    onEventSelected: EventEmitter<IEvent>;
    onTimeSelected: EventEmitter<ITimeSelected>;
    onTitleChanged: EventEmitter<string>;
    views: IWeekView[];
    currentViewIndex: number;
    range: IRange;
    direction: number;
    mode: CalendarMode;
    private inited;
    private callbackOnInit;
    private currentDateChangedFromParentSubscription;
    private eventSourceChangedSubscription;
    private roomLabels;
    private initScrollPosition;
    private formatDayHeader;
    private formatTitle;
    private formatHourColumnLabel;
    private hourRange;
    constructor(calendarService: CalendarService, elm: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onSlideChanged(): void;
    move(direction: number): void;
    static createWeekRooms(rooms: string[]): IWeekViewRow[][];
    static getDates(startTime: Date, n: number): IWeekViewDateRow[];
    private getRoomLabels;
    getViewData(startTime: Date): IWeekView;
    getRange(currentDate: Date): IRange;
    onDataLoaded(): void;
    daysBetween: (date1: Date, date2: Date) => number;
    refreshView(): void;
    getTitle(): string;
    select(selectedTime: Date, events: IDisplayEvent[]): void;
    eventSelected(event: IEvent): void;
    setScrollPosition(scrollPosition: number): void;
}
